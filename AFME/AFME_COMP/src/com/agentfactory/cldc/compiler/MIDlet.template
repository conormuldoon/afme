// Copyright:   Copyright (c) 1996-2006 The Agent Factory Working Group. All rights reserved.
// Licence:     This file is free software; you can redistribute it and/or modify
//              it under the terms of the GNU Lesser General Public License as published by
//              the Free Software Foundation; either version 2.1, or (at your option)
//              any later version.
//
//              This file is distributed in the hope that it will be useful,
//              but WITHOUT ANY WARRANTY; without even the implied warranty of
//              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//              GNU Lesser General Public License for more details.
//
//              You should have received a copy of the GNU Lesser General Public License
//              along with Agent Factory Micro Edition; see the file COPYING.  If not, write to
//              the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
//              Boston, MA 02111-1307, USA.
//
//				Author: Conor Muldoon
$=package =$ pack $=;
import javax.microedition.lcdui.*;
import javax.microedition.midlet.*;

public class =$ name $=let extends MIDlet implements CommandListener {
    
    =$ name $=AgentPlatform platform;
    public =$ name $=let() {
        platform=new =$ name $=AgentPlatform(this);
    }
    
    
    List list;
    public void startApp(){
        
        display();
        platform.start();
        
    }
    
    public void display(){
        if(list==null){
            final String listElement[]={"Agents","Application"};
            list=new List("Choose Item",List.IMPLICIT,listElement,null);
            list.setCommandListener(this);
            list.addCommand(new Command("Exit", Command.EXIT, 0));
            list.setCommandListener(this);
            
        }
        Display.getDisplay(this).setCurrent(list);
    }
    
        
    public void pauseApp() {
        platform.pause();
    }
    public void destroyApp(boolean unconditional) {
        platform.destroy();
    }
    
    public void commandAction(Command c, Displayable s) {
        
        if(c == List.SELECT_COMMAND){
            int index=list.getSelectedIndex();
            if(index==0){
                platform.display();
                return;
            }
            if(index==1){
                platform.displayApp();
                return;
            }
            
        }

        notifyDestroyed();
    }
}=$
